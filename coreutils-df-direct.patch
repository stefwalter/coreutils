diff -urNp coreutils-8.11-orig/doc/coreutils.texi coreutils-8.11/doc/coreutils.texi
--- coreutils-8.11-orig/doc/coreutils.texi	2011-04-12 12:07:43.000000000 +0200
+++ coreutils-8.11/doc/coreutils.texi	2011-04-14 09:53:43.764309420 +0200
@@ -10409,6 +10409,13 @@ pseudo-file-systems, such as automounter
 Scale sizes by @var{size} before printing them (@pxref{Block size}).
 For example, @option{-BG} prints sizes in units of 1,073,741,824 bytes.
 
+@itemx --direct
+@opindex --direct
+@cindex direct statfs for a file
+Do not resolve mount point and show statistics directly for a file. It can be
+especially useful for NFS mount points if there is a boundary between two
+storage policies behind the mount point.
+
 @itemx --total
 @opindex --total
 @cindex grand total of disk size, usage and available space
diff -urNp coreutils-8.11-orig/src/df.c coreutils-8.11/src/df.c
--- coreutils-8.11-orig/src/df.c	2011-04-12 12:07:43.000000000 +0200
+++ coreutils-8.11/src/df.c	2011-04-14 10:37:44.208308771 +0200
@@ -112,6 +112,9 @@ static bool print_type;
 /* If true, print a grand total at the end.  */
 static bool print_grand_total;
 
+/* If true, show statistics for a file instead of mount point.  */
+static bool direct_statfs;
+
 /* Grand total data. */
 static struct fs_usage grand_fsu;
 
@@ -166,13 +169,15 @@ static size_t nrows;
 enum
 {
   NO_SYNC_OPTION = CHAR_MAX + 1,
-  SYNC_OPTION
+  SYNC_OPTION,
+  DIRECT_OPTION
 };
 
 static struct option const long_options[] =
 {
   {"all", no_argument, NULL, 'a'},
   {"block-size", required_argument, NULL, 'B'},
+  {"direct", no_argument, NULL, DIRECT_OPTION},
   {"inodes", no_argument, NULL, 'i'},
   {"human-readable", no_argument, NULL, 'h'},
   {"si", no_argument, NULL, 'H'},
@@ -259,7 +264,11 @@ get_header (void)
         }
 
       char *cell = NULL;
-      char const *header = _(headers[field][header_mode]);
+     
+      char const *header = (field == MNT_FIELD && direct_statfs)?
+                             _("File") :
+                             _(headers[field][header_mode]);
+
       if (!header)
         header = _(headers[field][DEFAULT_MODE]);
 
@@ -757,6 +766,17 @@ get_point (const char *point, const stru
 static void
 get_entry (char const *name, struct stat const *statp)
 {
+  if (direct_statfs)
+    {
+      char *resolved = canonicalize_file_name (name);
+      if (resolved)
+	{
+	  get_dev (NULL, resolved, NULL, NULL, false, false, NULL);
+	  free (resolved);
+	  return;
+	}
+    }
+
   if ((S_ISBLK (statp->st_mode) || S_ISCHR (statp->st_mode))
       && get_disk (name))
     return;
@@ -825,6 +845,7 @@ Mandatory arguments to long options are 
   -B, --block-size=SIZE  scale sizes by SIZE before printing them.  E.g.,\n\
                            `-BM' prints sizes in units of 1,048,576 bytes.\n\
                            See SIZE format below.\n\
+      --direct          show statistics for a file instead of mount point\n\
       --total           produce a grand total\n\
   -h, --human-readable  print sizes in human readable format (e.g., 1K 234M 2G)\
 \n\
@@ -901,6 +922,9 @@ main (int argc, char **argv)
               xstrtol_fatal (e, oi, c, long_options, optarg);
           }
           break;
+        case DIRECT_OPTION:
+          direct_statfs = true;
+          break;
         case 'i':
           inode_format = true;
           break;
@@ -961,6 +985,13 @@ main (int argc, char **argv)
         }
     }
 
+  if (direct_statfs && show_local_fs)
+    {
+      error (0, 0, _("options --direct and --local (-l) are mutually "
+		     "exclusive"));
+      usage (EXIT_FAILURE);
+    }
+
   if (human_output_opts == -1)
     {
       if (posix_format)
diff -urNp coreutils-8.11-orig/tests/df/direct coreutils-8.11/tests/df/direct
--- coreutils-8.11-orig/tests/df/direct	1970-01-01 01:00:00.000000000 +0100
+++ coreutils-8.11/tests/df/direct	2011-04-14 09:53:43.767400034 +0200
@@ -0,0 +1,55 @@
+#!/bin/sh
+# Ensure "df --direct" works as documented
+
+# Copyright (C) 2010 Free Software Foundation, Inc.
+
+# This program is free software: you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation, either version 3 of the License, or
+# (at your option) any later version.
+
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+
+# You should have received a copy of the GNU General Public License
+# along with this program.  If not, see <http://www.gnu.org/licenses/>.
+
+. "${srcdir=.}/init.sh"; path_prepend_ ../src
+print_ver_ df
+
+df || skip_ "df fails"
+
+DIR=`pwd` || framework_failure
+FILE="$DIR/file"
+touch "$FILE" || framework_failure
+echo "$FILE" > file_exp || framework_failure
+echo "Mounted on" > header_mounted_exp || framework_failure
+echo "File" > header_file_exp || framework_failure
+
+fail=0
+
+df --portability "$FILE" > df_out || fail=1
+df --portability --direct "$FILE" > df_direct_out || fail=1
+df --portability --direct --local "$FILE" > /dev/null 2>&1 && fail=1
+
+# check df header
+$AWK '{ if (NR==1) print $6 " " $7; }' df_out > header_mounted_out \
+  || framework_failure
+$AWK '{ if (NR==1) print $6; }' df_direct_out > header_file_out \
+  || framework_failure
+compare header_mounted_out header_mounted_exp || fail=1
+compare header_file_out header_file_exp || fail=1
+
+# check df output (without --direct)
+$AWK '{ if (NR==2) print $6; }' df_out > file_out \
+  || framework_failure
+compare file_out file_exp && fail=1
+
+# check df output (with --direct)
+$AWK '{ if (NR==2) print $6; }' df_direct_out > file_out \
+  || framework_failure
+compare file_out file_exp || fail=1
+
+Exit $fail
diff -urNp coreutils-8.11-orig/tests/Makefile.am coreutils-8.11/tests/Makefile.am
--- coreutils-8.11-orig/tests/Makefile.am	2011-04-14 09:53:13.666324768 +0200
+++ coreutils-8.11/tests/Makefile.am	2011-04-14 09:53:43.768432620 +0200
@@ -362,6 +362,7 @@ TESTS =						\
   dd/stderr					\
   dd/unblock					\
   dd/unblock-sync				\
+  df/direct					\
   df/total-verify				\
   du/2g						\
   du/8gb					\
